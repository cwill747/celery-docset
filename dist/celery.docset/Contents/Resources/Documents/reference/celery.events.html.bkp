<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
<title>celery.events — Celery 3.1.23 documentation</title>
<link href="../_static/celery.css" rel="stylesheet" type="text/css"/>
<link href="../_static/pygments.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../',
        VERSION:     '3.1.23',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  true
      };
    </script>
<script src="../_static/jquery.js" type="text/javascript"></script>
<script src="../_static/underscore.js" type="text/javascript"></script>
<script src="../_static/doctools.js" type="text/javascript"></script>
<link href="../copyright.html" rel="copyright" title="Copyright"/>
<link href="../index.html" rel="top" title="Celery 3.1.23 documentation"/>
<link href="index.html" rel="up" title="API Reference"/>
<link href="celery.events.state.html" rel="next" title="celery.events.state"/>
<link href="celery.contrib.methods.html" rel="prev" title="celery.contrib.methods"/>
</head>
<body role="document">
<div aria-label="related navigation" class="related" role="navigation">
<h3>Navigation</h3>
<ul>
<li class="right" style="margin-right: 10px">
<a accesskey="I" href="../genindex.html" title="General Index">index</a></li>
<li class="right">
<a href="../py-modindex.html" title="Python Module Index">modules</a> |</li>
<li class="right">
<a accesskey="N" href="celery.events.state.html" title="celery.events.state">next</a> |</li>
<li class="right">
<a accesskey="P" href="celery.contrib.methods.html" title="celery.contrib.methods">previous</a> |</li>
<li class="nav-item nav-item-0"><a href="../index.html">Celery 3.1.23 documentation</a> »</li>
<li class="nav-item nav-item-1"><a accesskey="U" href="index.html">API Reference</a> »</li>
</ul>
</div>
<div class="document">
<div class="documentwrapper">
<div class="bodywrapper">
<div class="body" role="main">
<div class="deck">
<p>
        This document describes the current stable version of Celery (3.1). For development docs,
        <a href="http://docs.celeryproject.org/en/master/reference/celery.events.html">go here</a>.
        </p>
</div>
<div class="section" id="celery-events"><a name="//apple_ref/cpp/Module/celery.events"></a>
<h1>celery.events<a class="headerlink" href="#celery-events" title="Permalink to this headline">¶</a></h1>
<div class="contents local topic" id="contents">
<ul class="simple">
<li><a class="reference internal" href="#id1" id="id2">celery.events</a></li>
</ul>
</div>
<span class="target" id="module-celery.events"></span><div class="section" id="id1">
<h2><a class="toc-backref" href="#id2">celery.events</a><a class="headerlink" href="#id1" title="Permalink to this headline">¶</a></h2>
<p>Events is a stream of messages sent for certain actions occurring
in the worker (and clients if <a class="reference internal" href="../configuration.html#std:setting-CELERY_SEND_TASK_SENT_EVENT"><code class="xref std std-setting docutils literal"><span class="pre">CELERY_SEND_TASK_SENT_EVENT</span></code></a>
is enabled), used for monitoring purposes.</p>
<dl class="class">
<dt id="celery.events.Events"><a name="//apple_ref/cpp/Class/celery.events.Events"></a>
<em class="property">class </em><code class="descclassname">celery.events.</code><code class="descname">Events</code><span class="sig-paren">(</span><em>app=None</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#Events"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.Events" title="Permalink to this definition">¶</a></dt>
<dd><dl class="attribute">
<dt id="celery.events.Events.Dispatcher"><a name="//apple_ref/cpp/Attribute/celery.events.Events.Dispatcher"></a>
<code class="descname">Dispatcher</code><a class="reference internal" href="../_modules/celery/events.html#Events.Dispatcher"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.Events.Dispatcher" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="celery.events.Events.Receiver"><a name="//apple_ref/cpp/Attribute/celery.events.Events.Receiver"></a>
<code class="descname">Receiver</code><a class="reference internal" href="../_modules/celery/events.html#Events.Receiver"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.Events.Receiver" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="celery.events.Events.State"><a name="//apple_ref/cpp/Attribute/celery.events.Events.State"></a>
<code class="descname">State</code><a class="reference internal" href="../_modules/celery/events.html#Events.State"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.Events.State" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.events.Events.default_dispatcher"><a name="//apple_ref/cpp/Method/celery.events.Events.default_dispatcher"></a>
<code class="descname">default_dispatcher</code><span class="sig-paren">(</span><em>*args</em>, <em>**kwds</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#Events.default_dispatcher"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.Events.default_dispatcher" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
</dd></dl>
<dl class="function">
<dt id="celery.events.Event"><a name="//apple_ref/cpp/Function/celery.events.Event"></a>
<code class="descclassname">celery.events.</code><code class="descname">Event</code><span class="sig-paren">(</span><em>type</em>, <em>_fields=None</em>, <em>__dict__=&lt;type 'dict'&gt;</em>, <em>__now__=&lt;built-in function time&gt;</em>, <em>**fields</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#Event"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.Event" title="Permalink to this definition">¶</a></dt>
<dd><p>Create an event.</p>
<p>An event is a dictionary, the only required field is <code class="docutils literal"><span class="pre">type</span></code>.
A <code class="docutils literal"><span class="pre">timestamp</span></code> field will be set to the current time if not provided.</p>
</dd></dl>
<dl class="class">
<dt id="celery.events.EventDispatcher"><a name="//apple_ref/cpp/Class/celery.events.EventDispatcher"></a>
<em class="property">class </em><code class="descclassname">celery.events.</code><code class="descname">EventDispatcher</code><span class="sig-paren">(</span><em>connection=None</em>, <em>hostname=None</em>, <em>enabled=True</em>, <em>channel=None</em>, <em>buffer_while_offline=True</em>, <em>app=None</em>, <em>serializer=None</em>, <em>groups=None</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventDispatcher"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventDispatcher" title="Permalink to this definition">¶</a></dt>
<dd><p>Dispatches event messages.</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name"></col>
<col class="field-body"></col>
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first last simple">
<li><strong>connection</strong> – Connection to the broker.</li>
<li><strong>hostname</strong> – Hostname to identify ourselves as,
by default uses the hostname returned by
<code class="xref py py-func docutils literal"><span class="pre">anon_nodename()</span></code>.</li>
<li><strong>groups</strong> – List of groups to send events for.  <a class="reference internal" href="#celery.events.EventDispatcher.send" title="celery.events.EventDispatcher.send"><code class="xref py py-meth docutils literal"><span class="pre">send()</span></code></a> will
ignore send requests to groups not in this list.
If this is <code class="xref py py-const docutils literal"><span class="pre">None</span></code>, all events will be sent. Example groups
include <code class="docutils literal"><span class="pre">"task"</span></code> and <code class="docutils literal"><span class="pre">"worker"</span></code>.</li>
<li><strong>enabled</strong> – Set to <code class="xref py py-const docutils literal"><span class="pre">False</span></code> to not actually publish any events,
making <a class="reference internal" href="#celery.events.EventDispatcher.send" title="celery.events.EventDispatcher.send"><code class="xref py py-meth docutils literal"><span class="pre">send()</span></code></a> a noop operation.</li>
<li><strong>channel</strong> – Can be used instead of <cite>connection</cite> to specify
an exact channel to use when sending events.</li>
<li><strong>buffer_while_offline</strong> – If enabled events will be buffered
while the connection is down. <a class="reference internal" href="#celery.events.EventDispatcher.flush" title="celery.events.EventDispatcher.flush"><code class="xref py py-meth docutils literal"><span class="pre">flush()</span></code></a> must be called
as soon as the connection is re-established.</li>
</ul>
</td>
</tr>
</tbody>
</table>
<p>You need to <a class="reference internal" href="#celery.events.EventDispatcher.close" title="celery.events.EventDispatcher.close"><code class="xref py py-meth docutils literal"><span class="pre">close()</span></code></a> this after use.</p>
<dl class="attribute">
<dt id="celery.events.EventDispatcher.DISABLED_TRANSPORTS"><a name="//apple_ref/cpp/Attribute/celery.events.EventDispatcher.DISABLED_TRANSPORTS"></a>
<code class="descname">DISABLED_TRANSPORTS</code><em class="property"> = set(['sql'])</em><a class="headerlink" href="#celery.events.EventDispatcher.DISABLED_TRANSPORTS" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="celery.events.EventDispatcher.app"><a name="//apple_ref/cpp/Attribute/celery.events.EventDispatcher.app"></a>
<code class="descname">app</code><em class="property"> = None</em><a class="headerlink" href="#celery.events.EventDispatcher.app" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.events.EventDispatcher.close"><a name="//apple_ref/cpp/Method/celery.events.EventDispatcher.close"></a>
<code class="descname">close</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventDispatcher.close"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventDispatcher.close" title="Permalink to this definition">¶</a></dt>
<dd><p>Close the event dispatcher.</p>
</dd></dl>
<dl class="method">
<dt id="celery.events.EventDispatcher.disable"><a name="//apple_ref/cpp/Method/celery.events.EventDispatcher.disable"></a>
<code class="descname">disable</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventDispatcher.disable"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventDispatcher.disable" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.events.EventDispatcher.enable"><a name="//apple_ref/cpp/Method/celery.events.EventDispatcher.enable"></a>
<code class="descname">enable</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventDispatcher.enable"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventDispatcher.enable" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.events.EventDispatcher.extend_buffer"><a name="//apple_ref/cpp/Method/celery.events.EventDispatcher.extend_buffer"></a>
<code class="descname">extend_buffer</code><span class="sig-paren">(</span><em>other</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventDispatcher.extend_buffer"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventDispatcher.extend_buffer" title="Permalink to this definition">¶</a></dt>
<dd><p>Copies the outbound buffer of another instance.</p>
</dd></dl>
<dl class="method">
<dt id="celery.events.EventDispatcher.flush"><a name="//apple_ref/cpp/Method/celery.events.EventDispatcher.flush"></a>
<code class="descname">flush</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventDispatcher.flush"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventDispatcher.flush" title="Permalink to this definition">¶</a></dt>
<dd><p>Flushes the outbound buffer.</p>
</dd></dl>
<dl class="attribute">
<dt id="celery.events.EventDispatcher.on_disabled"><a name="//apple_ref/cpp/Attribute/celery.events.EventDispatcher.on_disabled"></a>
<code class="descname">on_disabled</code><em class="property"> = None</em><a class="headerlink" href="#celery.events.EventDispatcher.on_disabled" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="celery.events.EventDispatcher.on_enabled"><a name="//apple_ref/cpp/Attribute/celery.events.EventDispatcher.on_enabled"></a>
<code class="descname">on_enabled</code><em class="property"> = None</em><a class="headerlink" href="#celery.events.EventDispatcher.on_enabled" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.events.EventDispatcher.publish"><a name="//apple_ref/cpp/Method/celery.events.EventDispatcher.publish"></a>
<code class="descname">publish</code><span class="sig-paren">(</span><em>type</em>, <em>fields</em>, <em>producer</em>, <em>retry=False</em>, <em>retry_policy=None</em>, <em>blind=False</em>, <em>utcoffset=&lt;function utcoffset&gt;</em>, <em>Event=&lt;function Event&gt;</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventDispatcher.publish"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventDispatcher.publish" title="Permalink to this definition">¶</a></dt>
<dd><p>Publish event using a custom <a class="reference external" href="http://kombu.readthedocs.org/en/latest/reference/kombu.html#kombu.Producer" title="(in Kombu v3.0)"><code class="xref py py-class docutils literal"><span class="pre">Producer</span></code></a>
instance.</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name"></col>
<col class="field-body"></col>
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first last simple">
<li><strong>type</strong> – Event type name, with group separated by dash (<cite>-</cite>).</li>
<li><strong>fields</strong> – Dictionary of event fields, must be json serializable.</li>
<li><strong>producer</strong> – <a class="reference external" href="http://kombu.readthedocs.org/en/latest/reference/kombu.html#kombu.Producer" title="(in Kombu v3.0)"><code class="xref py py-class docutils literal"><span class="pre">Producer</span></code></a> instance to use,
only the <code class="docutils literal"><span class="pre">publish</span></code> method will be called.</li>
<li><strong>retry</strong> – Retry in the event of connection failure.</li>
<li><strong>retry_policy</strong> – Dict of custom retry policy, see
<a class="reference external" href="http://kombu.readthedocs.org/en/latest/reference/kombu.html#kombu.Connection.ensure" title="(in Kombu v3.0)"><code class="xref py py-meth docutils literal"><span class="pre">ensure()</span></code></a>.</li>
<li><strong>blind</strong> – Don’t set logical clock value (also do not forward
the internal logical clock).</li>
<li><strong>Event</strong> – Event type used to create event,
defaults to <a class="reference internal" href="#celery.events.Event" title="celery.events.Event"><code class="xref py py-func docutils literal"><span class="pre">Event()</span></code></a>.</li>
<li><strong>utcoffset</strong> – Function returning the current utcoffset in hours.</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>
<dl class="attribute">
<dt id="celery.events.EventDispatcher.publisher"><a name="//apple_ref/cpp/Attribute/celery.events.EventDispatcher.publisher"></a>
<code class="descname">publisher</code><a class="headerlink" href="#celery.events.EventDispatcher.publisher" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.events.EventDispatcher.send"><a name="//apple_ref/cpp/Method/celery.events.EventDispatcher.send"></a>
<code class="descname">send</code><span class="sig-paren">(</span><em>type</em>, <em>blind=False</em>, <em>**fields</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventDispatcher.send"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventDispatcher.send" title="Permalink to this definition">¶</a></dt>
<dd><p>Send event.</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name"></col>
<col class="field-body"></col>
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first last simple">
<li><strong>type</strong> – Event type name, with group separated by dash (<cite>-</cite>).</li>
<li><strong>retry</strong> – Retry in the event of connection failure.</li>
<li><strong>retry_policy</strong> – Dict of custom retry policy, see
<a class="reference external" href="http://kombu.readthedocs.org/en/latest/reference/kombu.html#kombu.Connection.ensure" title="(in Kombu v3.0)"><code class="xref py py-meth docutils literal"><span class="pre">ensure()</span></code></a>.</li>
<li><strong>blind</strong> – Don’t set logical clock value (also do not forward
the internal logical clock).</li>
<li><strong>Event</strong> – Event type used to create event,
defaults to <a class="reference internal" href="#celery.events.Event" title="celery.events.Event"><code class="xref py py-func docutils literal"><span class="pre">Event()</span></code></a>.</li>
<li><strong>utcoffset</strong> – Function returning the current utcoffset in hours.</li>
<li><strong>**fields</strong> – Event fields, must be json serializable.</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>
<dl class="method">
<dt id="celery.events.EventDispatcher.warn_if_yajl"><a name="//apple_ref/cpp/Method/celery.events.EventDispatcher.warn_if_yajl"></a>
<code class="descname">warn_if_yajl</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventDispatcher.warn_if_yajl"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventDispatcher.warn_if_yajl" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
</dd></dl>
<dl class="class">
<dt id="celery.events.EventReceiver"><a name="//apple_ref/cpp/Class/celery.events.EventReceiver"></a>
<em class="property">class </em><code class="descclassname">celery.events.</code><code class="descname">EventReceiver</code><span class="sig-paren">(</span><em>channel</em>, <em>handlers=None</em>, <em>routing_key='#'</em>, <em>node_id=None</em>, <em>app=None</em>, <em>queue_prefix='celeryev'</em>, <em>accept=None</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventReceiver"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventReceiver" title="Permalink to this definition">¶</a></dt>
<dd><p>Capture events.</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name"></col>
<col class="field-body"></col>
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first last simple">
<li><strong>connection</strong> – Connection to the broker.</li>
<li><strong>handlers</strong> – Event handlers.</li>
</ul>
</td>
</tr>
</tbody>
</table>
<p><code class="xref py py-attr docutils literal"><span class="pre">handlers</span></code> is a dict of event types and their handlers,
the special handler <cite>“*”</cite> captures all events that doesn’t have a
handler.</p>
<dl class="attribute">
<dt id="celery.events.EventReceiver.app"><a name="//apple_ref/cpp/Attribute/celery.events.EventReceiver.app"></a>
<code class="descname">app</code><em class="property"> = None</em><a class="headerlink" href="#celery.events.EventReceiver.app" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.events.EventReceiver.capture"><a name="//apple_ref/cpp/Method/celery.events.EventReceiver.capture"></a>
<code class="descname">capture</code><span class="sig-paren">(</span><em>limit=None</em>, <em>timeout=None</em>, <em>wakeup=True</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventReceiver.capture"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventReceiver.capture" title="Permalink to this definition">¶</a></dt>
<dd><p>Open up a consumer capturing events.</p>
<p>This has to run in the main process, and it will never
stop unless forced via <a class="reference external" href="http://docs.python.org/dev/library/exceptions.html#KeyboardInterrupt" title="(in Python v3.6)"><code class="xref py py-exc docutils literal"><span class="pre">KeyboardInterrupt</span></code></a> or <a class="reference external" href="http://docs.python.org/dev/library/exceptions.html#SystemExit" title="(in Python v3.6)"><code class="xref py py-exc docutils literal"><span class="pre">SystemExit</span></code></a>.</p>
</dd></dl>
<dl class="attribute">
<dt id="celery.events.EventReceiver.connection"><a name="//apple_ref/cpp/Attribute/celery.events.EventReceiver.connection"></a>
<code class="descname">connection</code><a class="headerlink" href="#celery.events.EventReceiver.connection" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.events.EventReceiver.event_from_message"><a name="//apple_ref/cpp/Method/celery.events.EventReceiver.event_from_message"></a>
<code class="descname">event_from_message</code><span class="sig-paren">(</span><em>body</em>, <em>localize=True</em>, <em>now=&lt;built-in function time&gt;</em>, <em>tzfields=&lt;operator.itemgetter object&gt;</em>, <em>adjust_timestamp=&lt;function adjust_timestamp&gt;</em>, <em>CLIENT_CLOCK_SKEW=-1</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventReceiver.event_from_message"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventReceiver.event_from_message" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.events.EventReceiver.get_consumers"><a name="//apple_ref/cpp/Method/celery.events.EventReceiver.get_consumers"></a>
<code class="descname">get_consumers</code><span class="sig-paren">(</span><em>Consumer</em>, <em>channel</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventReceiver.get_consumers"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventReceiver.get_consumers" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.events.EventReceiver.itercapture"><a name="//apple_ref/cpp/Method/celery.events.EventReceiver.itercapture"></a>
<code class="descname">itercapture</code><span class="sig-paren">(</span><em>limit=None</em>, <em>timeout=None</em>, <em>wakeup=True</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventReceiver.itercapture"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventReceiver.itercapture" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.events.EventReceiver.on_consume_ready"><a name="//apple_ref/cpp/Method/celery.events.EventReceiver.on_consume_ready"></a>
<code class="descname">on_consume_ready</code><span class="sig-paren">(</span><em>connection</em>, <em>channel</em>, <em>consumers</em>, <em>wakeup=True</em>, <em>**kwargs</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventReceiver.on_consume_ready"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventReceiver.on_consume_ready" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.events.EventReceiver.process"><a name="//apple_ref/cpp/Method/celery.events.EventReceiver.process"></a>
<code class="descname">process</code><span class="sig-paren">(</span><em>type</em>, <em>event</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventReceiver.process"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventReceiver.process" title="Permalink to this definition">¶</a></dt>
<dd><p>Process the received event by dispatching it to the appropriate
handler.</p>
</dd></dl>
<dl class="method">
<dt id="celery.events.EventReceiver.wakeup_workers"><a name="//apple_ref/cpp/Method/celery.events.EventReceiver.wakeup_workers"></a>
<code class="descname">wakeup_workers</code><span class="sig-paren">(</span><em>channel=None</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/events.html#EventReceiver.wakeup_workers"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.events.EventReceiver.wakeup_workers" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
</dd></dl>
</div>
</div>
</div>
</div>
</div>
</div>
<div aria-label="related navigation" class="related" role="navigation">
<h3>Navigation</h3>
<ul>
<li class="right" style="margin-right: 10px">
<a href="../genindex.html" title="General Index">index</a></li>
<li class="right">
<a href="../py-modindex.html" title="Python Module Index">modules</a> |</li>
<li class="right">
<a href="celery.events.state.html" title="celery.events.state">next</a> |</li>
<li class="right">
<a href="celery.contrib.methods.html" title="celery.contrib.methods">previous</a> |</li>
<li class="nav-item nav-item-0"><a href="../index.html">Celery 3.1.23 documentation</a> »</li>
<li class="nav-item nav-item-1"><a href="index.html">API Reference</a> »</li>
</ul>
</div>
<div class="footer" role="contentinfo">
        © <a href="../copyright.html">Copyright</a> 2009-2015, Ask Solem &amp; Contributors.
    </div>
</body>
</html>
