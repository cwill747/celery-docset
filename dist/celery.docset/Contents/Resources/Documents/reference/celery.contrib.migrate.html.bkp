<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
<title>celery.contrib.migrate — Celery 3.1.23 documentation</title>
<link href="../_static/celery.css" rel="stylesheet" type="text/css"/>
<link href="../_static/pygments.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../',
        VERSION:     '3.1.23',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  true
      };
    </script>
<script src="../_static/jquery.js" type="text/javascript"></script>
<script src="../_static/underscore.js" type="text/javascript"></script>
<script src="../_static/doctools.js" type="text/javascript"></script>
<link href="../copyright.html" rel="copyright" title="Copyright"/>
<link href="../index.html" rel="top" title="Celery 3.1.23 documentation"/>
<link href="index.html" rel="up" title="API Reference"/>
<link href="celery.contrib.sphinx.html" rel="next" title="celery.contrib.sphinx"/>
<link href="celery.contrib.batches.html" rel="prev" title="celery.contrib.batches"/>
</head>
<body role="document">
<div aria-label="related navigation" class="related" role="navigation">
<h3>Navigation</h3>
<ul>
<li class="right" style="margin-right: 10px">
<a accesskey="I" href="../genindex.html" title="General Index">index</a></li>
<li class="right">
<a href="../py-modindex.html" title="Python Module Index">modules</a> |</li>
<li class="right">
<a accesskey="N" href="celery.contrib.sphinx.html" title="celery.contrib.sphinx">next</a> |</li>
<li class="right">
<a accesskey="P" href="celery.contrib.batches.html" title="celery.contrib.batches">previous</a> |</li>
<li class="nav-item nav-item-0"><a href="../index.html">Celery 3.1.23 documentation</a> »</li>
<li class="nav-item nav-item-1"><a accesskey="U" href="index.html">API Reference</a> »</li>
</ul>
</div>
<div class="document">
<div class="documentwrapper">
<div class="bodywrapper">
<div class="body" role="main">
<div class="deck">
<p>
        This document describes the current stable version of Celery (3.1). For development docs,
        <a href="http://docs.celeryproject.org/en/master/reference/celery.contrib.migrate.html">go here</a>.
        </p>
</div>
<div class="section" id="celery-contrib-migrate"><a name="//apple_ref/cpp/Module/celery.contrib.migrate"></a>
<h1>celery.contrib.migrate<a class="headerlink" href="#celery-contrib-migrate" title="Permalink to this headline">¶</a></h1>
<div class="contents local topic" id="contents">
<ul class="simple">
<li><a class="reference internal" href="#id1" id="id2">celery.contrib.migrate</a></li>
</ul>
</div>
<span class="target" id="module-celery.contrib.migrate"></span><div class="section" id="id1">
<h2><a class="toc-backref" href="#id2">celery.contrib.migrate</a><a class="headerlink" href="#id1" title="Permalink to this headline">¶</a></h2>
<p>Migration tools.</p>
<dl class="exception">
<dt id="celery.contrib.migrate.StopFiltering"><a name="//apple_ref/cpp/Exception/celery.contrib.migrate.StopFiltering"></a>
<em class="property">exception </em><code class="descclassname">celery.contrib.migrate.</code><code class="descname">StopFiltering</code><a class="reference internal" href="../_modules/celery/contrib/migrate.html#StopFiltering"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.contrib.migrate.StopFiltering" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="class">
<dt id="celery.contrib.migrate.State"><a name="//apple_ref/cpp/Class/celery.contrib.migrate.State"></a>
<em class="property">class </em><code class="descclassname">celery.contrib.migrate.</code><code class="descname">State</code><a class="reference internal" href="../_modules/celery/contrib/migrate.html#State"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.contrib.migrate.State" title="Permalink to this definition">¶</a></dt>
<dd><dl class="attribute">
<dt id="celery.contrib.migrate.State.count"><a name="//apple_ref/cpp/Attribute/celery.contrib.migrate.State.count"></a>
<code class="descname">count</code><em class="property"> = 0</em><a class="headerlink" href="#celery.contrib.migrate.State.count" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="celery.contrib.migrate.State.filtered"><a name="//apple_ref/cpp/Attribute/celery.contrib.migrate.State.filtered"></a>
<code class="descname">filtered</code><em class="property"> = 0</em><a class="headerlink" href="#celery.contrib.migrate.State.filtered" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="celery.contrib.migrate.State.strtotal"><a name="//apple_ref/cpp/Attribute/celery.contrib.migrate.State.strtotal"></a>
<code class="descname">strtotal</code><a class="headerlink" href="#celery.contrib.migrate.State.strtotal" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="celery.contrib.migrate.State.total_apx"><a name="//apple_ref/cpp/Attribute/celery.contrib.migrate.State.total_apx"></a>
<code class="descname">total_apx</code><em class="property"> = 0</em><a class="headerlink" href="#celery.contrib.migrate.State.total_apx" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
</dd></dl>
<dl class="function">
<dt id="celery.contrib.migrate.republish"><a name="//apple_ref/cpp/Function/celery.contrib.migrate.republish"></a>
<code class="descclassname">celery.contrib.migrate.</code><code class="descname">republish</code><span class="sig-paren">(</span><em>producer, message, exchange=None, routing_key=None, remove_props=[u'application_headers', u'content_type', u'content_encoding', u'headers']</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/contrib/migrate.html#republish"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.contrib.migrate.republish" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="function">
<dt id="celery.contrib.migrate.migrate_task"><a name="//apple_ref/cpp/Function/celery.contrib.migrate.migrate_task"></a>
<code class="descclassname">celery.contrib.migrate.</code><code class="descname">migrate_task</code><span class="sig-paren">(</span><em>producer</em>, <em>body_</em>, <em>message</em>, <em>queues=None</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/contrib/migrate.html#migrate_task"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.contrib.migrate.migrate_task" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="function">
<dt id="celery.contrib.migrate.migrate_tasks"><a name="//apple_ref/cpp/Function/celery.contrib.migrate.migrate_tasks"></a>
<code class="descclassname">celery.contrib.migrate.</code><code class="descname">migrate_tasks</code><span class="sig-paren">(</span><em>source</em>, <em>dest</em>, <em>migrate=&lt;function migrate_task&gt;</em>, <em>app=None</em>, <em>queues=None</em>, <em>**kwargs</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/contrib/migrate.html#migrate_tasks"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.contrib.migrate.migrate_tasks" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="function">
<dt id="celery.contrib.migrate.move"><a name="//apple_ref/cpp/Function/celery.contrib.migrate.move"></a>
<code class="descclassname">celery.contrib.migrate.</code><code class="descname">move</code><span class="sig-paren">(</span><em>predicate</em>, <em>connection=None</em>, <em>exchange=None</em>, <em>routing_key=None</em>, <em>source=None</em>, <em>app=None</em>, <em>callback=None</em>, <em>limit=None</em>, <em>transform=None</em>, <em>**kwargs</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/contrib/migrate.html#move"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.contrib.migrate.move" title="Permalink to this definition">¶</a></dt>
<dd><p>Find tasks by filtering them and move the tasks to a new queue.</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name"></col>
<col class="field-body"></col>
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first last simple">
<li><strong>predicate</strong> – <p>Filter function used to decide which messages
to move.  Must accept the standard signature of <code class="docutils literal"><span class="pre">(body,</span> <span class="pre">message)</span></code>
used by Kombu consumer callbacks. If the predicate wants the message
to be moved it must return either:</p>
<blockquote>
<div><ol class="arabic">
<li>a tuple of <code class="docutils literal"><span class="pre">(exchange,</span> <span class="pre">routing_key)</span></code>, or</li>
<li>a <code class="xref py py-class docutils literal"><span class="pre">Queue</span></code> instance, or</li>
<li>any other true value which means the specified
<code class="docutils literal"><span class="pre">exchange</span></code> and <code class="docutils literal"><span class="pre">routing_key</span></code> arguments will be used.</li>
</ol>
</div></blockquote>
</li>
<li><strong>connection</strong> – Custom connection to use.</li>
<li><strong>source</strong> – Optional list of source queues to use instead of the
default (which is the queues in <a class="reference internal" href="../configuration.html#std:setting-CELERY_QUEUES"><code class="xref std std-setting docutils literal"><span class="pre">CELERY_QUEUES</span></code></a>).
This list can also contain new <code class="xref py py-class docutils literal"><span class="pre">Queue</span></code> instances.</li>
<li><strong>exchange</strong> – Default destination exchange.</li>
<li><strong>routing_key</strong> – Default destination routing key.</li>
<li><strong>limit</strong> – Limit number of messages to filter.</li>
<li><strong>callback</strong> – Callback called after message moved,
with signature <code class="docutils literal"><span class="pre">(state,</span> <span class="pre">body,</span> <span class="pre">message)</span></code>.</li>
<li><strong>transform</strong> – Optional function to transform the return
value (destination) of the filter function.</li>
</ul>
</td>
</tr>
</tbody>
</table>
<p>Also supports the same keyword arguments as <a class="reference internal" href="#celery.contrib.migrate.start_filter" title="celery.contrib.migrate.start_filter"><code class="xref py py-func docutils literal"><span class="pre">start_filter()</span></code></a>.</p>
<p>To demonstrate, the <a class="reference internal" href="#celery.contrib.migrate.move_task_by_id" title="celery.contrib.migrate.move_task_by_id"><code class="xref py py-func docutils literal"><span class="pre">move_task_by_id()</span></code></a> operation can be implemented
like this:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">is_wanted_task</span><span class="p">(</span><span class="n">body</span><span class="p">,</span> <span class="n">message</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">body</span><span class="p">[</span><span class="s1">'id'</span><span class="p">]</span> <span class="o">==</span> <span class="n">wanted_id</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">Queue</span><span class="p">(</span><span class="s1">'foo'</span><span class="p">,</span> <span class="n">exchange</span><span class="o">=</span><span class="n">Exchange</span><span class="p">(</span><span class="s1">'foo'</span><span class="p">),</span>
                     <span class="n">routing_key</span><span class="o">=</span><span class="s1">'foo'</span><span class="p">)</span>

<span class="n">move</span><span class="p">(</span><span class="n">is_wanted_task</span><span class="p">)</span>
</pre></div>
</div>
<p>or with a transform:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">transform</span><span class="p">(</span><span class="n">value</span><span class="p">):</span>
    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">string_t</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">Queue</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">Exchange</span><span class="p">(</span><span class="n">value</span><span class="p">),</span> <span class="n">value</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">value</span>

<span class="n">move</span><span class="p">(</span><span class="n">is_wanted_task</span><span class="p">,</span> <span class="n">transform</span><span class="o">=</span><span class="n">transform</span><span class="p">)</span>
</pre></div>
</div>
<p>The predicate may also return a tuple of <code class="docutils literal"><span class="pre">(exchange,</span> <span class="pre">routing_key)</span></code>
to specify the destination to where the task should be moved,
or a <code class="xref py py-class docutils literal"><span class="pre">Queue</span></code> instance.
Any other true value means that the task will be moved to the
default exchange/routing_key.</p>
</dd></dl>
<dl class="function">
<dt id="celery.contrib.migrate.task_id_eq"><a name="//apple_ref/cpp/Function/celery.contrib.migrate.task_id_eq"></a>
<code class="descclassname">celery.contrib.migrate.</code><code class="descname">task_id_eq</code><span class="sig-paren">(</span><em>task_id</em>, <em>body</em>, <em>message</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/contrib/migrate.html#task_id_eq"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.contrib.migrate.task_id_eq" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="function">
<dt id="celery.contrib.migrate.task_id_in"><a name="//apple_ref/cpp/Function/celery.contrib.migrate.task_id_in"></a>
<code class="descclassname">celery.contrib.migrate.</code><code class="descname">task_id_in</code><span class="sig-paren">(</span><em>ids</em>, <em>body</em>, <em>message</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/contrib/migrate.html#task_id_in"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.contrib.migrate.task_id_in" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="function">
<dt id="celery.contrib.migrate.start_filter"><a name="//apple_ref/cpp/Function/celery.contrib.migrate.start_filter"></a>
<code class="descclassname">celery.contrib.migrate.</code><code class="descname">start_filter</code><span class="sig-paren">(</span><em>app</em>, <em>conn</em>, <em>filter</em>, <em>limit=None</em>, <em>timeout=1.0</em>, <em>ack_messages=False</em>, <em>tasks=None</em>, <em>queues=None</em>, <em>callback=None</em>, <em>forever=False</em>, <em>on_declare_queue=None</em>, <em>consume_from=None</em>, <em>state=None</em>, <em>accept=None</em>, <em>**kwargs</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/contrib/migrate.html#start_filter"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.contrib.migrate.start_filter" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="function">
<dt id="celery.contrib.migrate.move_task_by_id"><a name="//apple_ref/cpp/Function/celery.contrib.migrate.move_task_by_id"></a>
<code class="descclassname">celery.contrib.migrate.</code><code class="descname">move_task_by_id</code><span class="sig-paren">(</span><em>task_id</em>, <em>dest</em>, <em>**kwargs</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/contrib/migrate.html#move_task_by_id"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.contrib.migrate.move_task_by_id" title="Permalink to this definition">¶</a></dt>
<dd><p>Find a task by id and move it to another queue.</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name"></col>
<col class="field-body"></col>
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameters:</th><td class="field-body"><ul class="first last simple">
<li><strong>task_id</strong> – Id of task to move.</li>
<li><strong>dest</strong> – Destination queue.</li>
</ul>
</td>
</tr>
</tbody>
</table>
<p>Also supports the same keyword arguments as <a class="reference internal" href="#celery.contrib.migrate.move" title="celery.contrib.migrate.move"><code class="xref py py-func docutils literal"><span class="pre">move()</span></code></a>.</p>
</dd></dl>
<dl class="function">
<dt id="celery.contrib.migrate.move_by_idmap"><a name="//apple_ref/cpp/Function/celery.contrib.migrate.move_by_idmap"></a>
<code class="descclassname">celery.contrib.migrate.</code><code class="descname">move_by_idmap</code><span class="sig-paren">(</span><em>map</em>, <em>**kwargs</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/contrib/migrate.html#move_by_idmap"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.contrib.migrate.move_by_idmap" title="Permalink to this definition">¶</a></dt>
<dd><p>Moves tasks by matching from a <code class="docutils literal"><span class="pre">task_id:</span> <span class="pre">queue</span></code> mapping,
where <code class="docutils literal"><span class="pre">queue</span></code> is a queue to move the task to.</p>
<p>Example:</p>
<div class="highlight-python3"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">move_by_idmap</span><span class="p">({</span>
<span class="gp">... </span>    <span class="s1">'5bee6e82-f4ac-468e-bd3d-13e8600250bc'</span><span class="p">:</span> <span class="n">Queue</span><span class="p">(</span><span class="s1">'name'</span><span class="p">),</span>
<span class="gp">... </span>    <span class="s1">'ada8652d-aef3-466b-abd2-becdaf1b82b3'</span><span class="p">:</span> <span class="n">Queue</span><span class="p">(</span><span class="s1">'name'</span><span class="p">),</span>
<span class="gp">... </span>    <span class="s1">'3a2b140d-7db1-41ba-ac90-c36a0ef4ab1f'</span><span class="p">:</span> <span class="n">Queue</span><span class="p">(</span><span class="s1">'name'</span><span class="p">)},</span>
<span class="gp">... </span>  <span class="n">queues</span><span class="o">=</span><span class="p">[</span><span class="s1">'hipri'</span><span class="p">])</span>
</pre></div>
</div>
</dd></dl>
<dl class="function">
<dt id="celery.contrib.migrate.move_by_taskmap"><a name="//apple_ref/cpp/Function/celery.contrib.migrate.move_by_taskmap"></a>
<code class="descclassname">celery.contrib.migrate.</code><code class="descname">move_by_taskmap</code><span class="sig-paren">(</span><em>map</em>, <em>**kwargs</em><span class="sig-paren">)</span><a class="reference internal" href="../_modules/celery/contrib/migrate.html#move_by_taskmap"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.contrib.migrate.move_by_taskmap" title="Permalink to this definition">¶</a></dt>
<dd><p>Moves tasks by matching from a <code class="docutils literal"><span class="pre">task_name:</span> <span class="pre">queue</span></code> mapping,
where <code class="docutils literal"><span class="pre">queue</span></code> is the queue to move the task to.</p>
<p>Example:</p>
<div class="highlight-python3"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">move_by_taskmap</span><span class="p">({</span>
<span class="gp">... </span>    <span class="s1">'tasks.add'</span><span class="p">:</span> <span class="n">Queue</span><span class="p">(</span><span class="s1">'name'</span><span class="p">),</span>
<span class="gp">... </span>    <span class="s1">'tasks.mul'</span><span class="p">:</span> <span class="n">Queue</span><span class="p">(</span><span class="s1">'name'</span><span class="p">),</span>
<span class="gp">... </span><span class="p">})</span>
</pre></div>
</div>
</dd></dl>
</div>
</div>
</div>
</div>
</div>
</div>
<div aria-label="related navigation" class="related" role="navigation">
<h3>Navigation</h3>
<ul>
<li class="right" style="margin-right: 10px">
<a href="../genindex.html" title="General Index">index</a></li>
<li class="right">
<a href="../py-modindex.html" title="Python Module Index">modules</a> |</li>
<li class="right">
<a href="celery.contrib.sphinx.html" title="celery.contrib.sphinx">next</a> |</li>
<li class="right">
<a href="celery.contrib.batches.html" title="celery.contrib.batches">previous</a> |</li>
<li class="nav-item nav-item-0"><a href="../index.html">Celery 3.1.23 documentation</a> »</li>
<li class="nav-item nav-item-1"><a href="index.html">API Reference</a> »</li>
</ul>
</div>
<div class="footer" role="contentinfo">
        © <a href="../copyright.html">Copyright</a> 2009-2015, Ask Solem &amp; Contributors.
    </div>
</body>
</html>
