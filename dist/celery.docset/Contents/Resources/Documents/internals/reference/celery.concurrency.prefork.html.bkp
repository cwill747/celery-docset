<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
<title>celery.concurrency.prefork — Celery 3.1.23 documentation</title>
<link href="../../_static/celery.css" rel="stylesheet" type="text/css"/>
<link href="../../_static/pygments.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../../',
        VERSION:     '3.1.23',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  true
      };
    </script>
<script src="../../_static/jquery.js" type="text/javascript"></script>
<script src="../../_static/underscore.js" type="text/javascript"></script>
<script src="../../_static/doctools.js" type="text/javascript"></script>
<link href="../../copyright.html" rel="copyright" title="Copyright"/>
<link href="../../index.html" rel="top" title="Celery 3.1.23 documentation"/>
<link href="index.html" rel="up" title="Internal Module Reference"/>
<link href="celery.concurrency.eventlet.html" rel="next" title="celery.concurrency.eventlet"/>
<link href="celery.concurrency.solo.html" rel="prev" title="celery.concurrency.solo"/>
</head>
<body role="document">
<div aria-label="related navigation" class="related" role="navigation">
<h3>Navigation</h3>
<ul>
<li class="right" style="margin-right: 10px">
<a accesskey="I" href="../../genindex.html" title="General Index">index</a></li>
<li class="right">
<a href="../../py-modindex.html" title="Python Module Index">modules</a> |</li>
<li class="right">
<a accesskey="N" href="celery.concurrency.eventlet.html" title="celery.concurrency.eventlet">next</a> |</li>
<li class="right">
<a accesskey="P" href="celery.concurrency.solo.html" title="celery.concurrency.solo">previous</a> |</li>
<li class="nav-item nav-item-0"><a href="../../index.html">Celery 3.1.23 documentation</a> »</li>
<li class="nav-item nav-item-1"><a href="../index.html">Internals</a> »</li>
<li class="nav-item nav-item-2"><a accesskey="U" href="index.html">Internal Module Reference</a> »</li>
</ul>
</div>
<div class="document">
<div class="documentwrapper">
<div class="bodywrapper">
<div class="body" role="main">
<div class="deck">
<p>
        This document describes the current stable version of Celery (3.1). For development docs,
        <a href="http://docs.celeryproject.org/en/master/internals/reference/celery.concurrency.prefork.html">go here</a>.
        </p>
</div>
<div class="section" id="celery-concurrency-prefork"><a name="//apple_ref/cpp/Module/celery.concurrency.prefork"></a>
<h1>celery.concurrency.prefork<a class="headerlink" href="#celery-concurrency-prefork" title="Permalink to this headline">¶</a></h1>
<div class="contents local topic" id="contents">
<ul class="simple">
<li><a class="reference internal" href="#id1" id="id2">celery.concurrency.prefork</a></li>
</ul>
</div>
<span class="target" id="module-celery.concurrency.prefork"></span><div class="section" id="id1">
<h2><a class="toc-backref" href="#id2">celery.concurrency.prefork</a><a class="headerlink" href="#id1" title="Permalink to this headline">¶</a></h2>
<p>Pool implementation using <a class="reference external" href="http://docs.python.org/dev/library/multiprocessing.html#module-multiprocessing" title="(in Python v3.6)"><code class="xref py py-mod docutils literal"><span class="pre">multiprocessing</span></code></a>.</p>
<dl class="class">
<dt id="celery.concurrency.prefork.TaskPool"><a name="//apple_ref/cpp/Class/celery.concurrency.prefork.TaskPool"></a>
<em class="property">class </em><code class="descclassname">celery.concurrency.prefork.</code><code class="descname">TaskPool</code><span class="sig-paren">(</span><em>limit=None</em>, <em>putlocks=True</em>, <em>forking_enable=True</em>, <em>callbacks_propagate=()</em>, <em>**options</em><span class="sig-paren">)</span><a class="reference internal" href="../../_modules/celery/concurrency/prefork.html#TaskPool"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.concurrency.prefork.TaskPool" title="Permalink to this definition">¶</a></dt>
<dd><p>Multiprocessing Pool implementation.</p>
<dl class="attribute">
<dt id="celery.concurrency.prefork.TaskPool.BlockingPool"><a name="//apple_ref/cpp/Attribute/celery.concurrency.prefork.TaskPool.BlockingPool"></a>
<code class="descname">BlockingPool</code><a class="headerlink" href="#celery.concurrency.prefork.TaskPool.BlockingPool" title="Permalink to this definition">¶</a></dt>
<dd><p>alias of <a class="reference internal" href="#celery.concurrency.prefork.TaskPool.Pool" title="celery.concurrency.prefork.TaskPool.Pool"><code class="xref py py-class docutils literal"><span class="pre">Pool</span></code></a></p>
</dd></dl>
<dl class="attribute">
<dt id="celery.concurrency.prefork.TaskPool.Pool"><a name="//apple_ref/cpp/Attribute/celery.concurrency.prefork.TaskPool.Pool"></a>
<code class="descname">Pool</code><a class="headerlink" href="#celery.concurrency.prefork.TaskPool.Pool" title="Permalink to this definition">¶</a></dt>
<dd><p>alias of <code class="xref py py-class docutils literal"><span class="pre">AsynPool</span></code></p>
</dd></dl>
<dl class="method">
<dt id="celery.concurrency.prefork.TaskPool.did_start_ok"><a name="//apple_ref/cpp/Method/celery.concurrency.prefork.TaskPool.did_start_ok"></a>
<code class="descname">did_start_ok</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="../../_modules/celery/concurrency/prefork.html#TaskPool.did_start_ok"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.concurrency.prefork.TaskPool.did_start_ok" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="celery.concurrency.prefork.TaskPool.num_processes"><a name="//apple_ref/cpp/Attribute/celery.concurrency.prefork.TaskPool.num_processes"></a>
<code class="descname">num_processes</code><a class="headerlink" href="#celery.concurrency.prefork.TaskPool.num_processes" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.concurrency.prefork.TaskPool.on_close"><a name="//apple_ref/cpp/Method/celery.concurrency.prefork.TaskPool.on_close"></a>
<code class="descname">on_close</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="../../_modules/celery/concurrency/prefork.html#TaskPool.on_close"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.concurrency.prefork.TaskPool.on_close" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.concurrency.prefork.TaskPool.on_start"><a name="//apple_ref/cpp/Method/celery.concurrency.prefork.TaskPool.on_start"></a>
<code class="descname">on_start</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="../../_modules/celery/concurrency/prefork.html#TaskPool.on_start"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.concurrency.prefork.TaskPool.on_start" title="Permalink to this definition">¶</a></dt>
<dd><p>Run the task pool.</p>
<p>Will pre-fork all workers so they’re ready to accept tasks.</p>
</dd></dl>
<dl class="method">
<dt id="celery.concurrency.prefork.TaskPool.on_stop"><a name="//apple_ref/cpp/Method/celery.concurrency.prefork.TaskPool.on_stop"></a>
<code class="descname">on_stop</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="../../_modules/celery/concurrency/prefork.html#TaskPool.on_stop"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.concurrency.prefork.TaskPool.on_stop" title="Permalink to this definition">¶</a></dt>
<dd><p>Gracefully stop the pool.</p>
</dd></dl>
<dl class="method">
<dt id="celery.concurrency.prefork.TaskPool.on_terminate"><a name="//apple_ref/cpp/Method/celery.concurrency.prefork.TaskPool.on_terminate"></a>
<code class="descname">on_terminate</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="../../_modules/celery/concurrency/prefork.html#TaskPool.on_terminate"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.concurrency.prefork.TaskPool.on_terminate" title="Permalink to this definition">¶</a></dt>
<dd><p>Force terminate the pool.</p>
</dd></dl>
<dl class="method">
<dt id="celery.concurrency.prefork.TaskPool.register_with_event_loop"><a name="//apple_ref/cpp/Method/celery.concurrency.prefork.TaskPool.register_with_event_loop"></a>
<code class="descname">register_with_event_loop</code><span class="sig-paren">(</span><em>loop</em><span class="sig-paren">)</span><a class="reference internal" href="../../_modules/celery/concurrency/prefork.html#TaskPool.register_with_event_loop"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.concurrency.prefork.TaskPool.register_with_event_loop" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="celery.concurrency.prefork.TaskPool.restart"><a name="//apple_ref/cpp/Method/celery.concurrency.prefork.TaskPool.restart"></a>
<code class="descname">restart</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="../../_modules/celery/concurrency/prefork.html#TaskPool.restart"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.concurrency.prefork.TaskPool.restart" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="celery.concurrency.prefork.TaskPool.uses_semaphore"><a name="//apple_ref/cpp/Attribute/celery.concurrency.prefork.TaskPool.uses_semaphore"></a>
<code class="descname">uses_semaphore</code><em class="property"> = True</em><a class="headerlink" href="#celery.concurrency.prefork.TaskPool.uses_semaphore" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="celery.concurrency.prefork.TaskPool.write_stats"><a name="//apple_ref/cpp/Attribute/celery.concurrency.prefork.TaskPool.write_stats"></a>
<code class="descname">write_stats</code><em class="property"> = None</em><a class="headerlink" href="#celery.concurrency.prefork.TaskPool.write_stats" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
</dd></dl>
<dl class="function">
<dt id="celery.concurrency.prefork.process_initializer"><a name="//apple_ref/cpp/Function/celery.concurrency.prefork.process_initializer"></a>
<code class="descclassname">celery.concurrency.prefork.</code><code class="descname">process_initializer</code><span class="sig-paren">(</span><em>app</em>, <em>hostname</em><span class="sig-paren">)</span><a class="reference internal" href="../../_modules/celery/concurrency/prefork.html#process_initializer"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.concurrency.prefork.process_initializer" title="Permalink to this definition">¶</a></dt>
<dd><p>Pool child process initializer.</p>
<p>This will initialize a child pool process to ensure the correct
app instance is used and things like
logging works.</p>
</dd></dl>
<dl class="function">
<dt id="celery.concurrency.prefork.process_destructor"><a name="//apple_ref/cpp/Function/celery.concurrency.prefork.process_destructor"></a>
<code class="descclassname">celery.concurrency.prefork.</code><code class="descname">process_destructor</code><span class="sig-paren">(</span><em>pid</em>, <em>exitcode</em><span class="sig-paren">)</span><a class="reference internal" href="../../_modules/celery/concurrency/prefork.html#process_destructor"><span class="viewcode-link">[source]</span></a><a class="headerlink" href="#celery.concurrency.prefork.process_destructor" title="Permalink to this definition">¶</a></dt>
<dd><p>Pool child process destructor</p>
<p>Dispatch the <a class="reference internal" href="../../userguide/signals.html#std:signal-worker_process_shutdown"><code class="xref std std-signal docutils literal"><span class="pre">worker_process_shutdown</span></code></a> signal.</p>
</dd></dl>
</div>
</div>
</div>
</div>
</div>
</div>
<div aria-label="related navigation" class="related" role="navigation">
<h3>Navigation</h3>
<ul>
<li class="right" style="margin-right: 10px">
<a href="../../genindex.html" title="General Index">index</a></li>
<li class="right">
<a href="../../py-modindex.html" title="Python Module Index">modules</a> |</li>
<li class="right">
<a href="celery.concurrency.eventlet.html" title="celery.concurrency.eventlet">next</a> |</li>
<li class="right">
<a href="celery.concurrency.solo.html" title="celery.concurrency.solo">previous</a> |</li>
<li class="nav-item nav-item-0"><a href="../../index.html">Celery 3.1.23 documentation</a> »</li>
<li class="nav-item nav-item-1"><a href="../index.html">Internals</a> »</li>
<li class="nav-item nav-item-2"><a href="index.html">Internal Module Reference</a> »</li>
</ul>
</div>
<div class="footer" role="contentinfo">
        © <a href="../../copyright.html">Copyright</a> 2009-2015, Ask Solem &amp; Contributors.
    </div>
</body>
</html>
