<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">


<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <title>celery.exceptions &mdash; Celery 3.1.23 documentation</title>
    
    <link rel="stylesheet" href="../../_static/celery.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
    
    <script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../../',
        VERSION:     '3.1.23',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  true
      };
    </script>
    <script type="text/javascript" src="../../_static/jquery.js"></script>
    <script type="text/javascript" src="../../_static/underscore.js"></script>
    <script type="text/javascript" src="../../_static/doctools.js"></script>
    <link rel="copyright" title="Copyright" href="../../copyright.html" />
    <link rel="top" title="Celery 3.1.23 documentation" href="../../index.html" />
    <link rel="up" title="Module code" href="../index.html" /> 
  </head>
  <body role="document">
    <div class="related" role="navigation" aria-label="related navigation">
      <h3>Navigation</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="../../genindex.html" title="General Index"
             accesskey="I">index</a></li>
        <li class="right" >
          <a href="../../py-modindex.html" title="Python Module Index"
             >modules</a> |</li>
        <li class="nav-item nav-item-0"><a href="../../index.html">Celery 3.1.23 documentation</a> &raquo;</li>
          <li class="nav-item nav-item-1"><a href="../index.html" accesskey="U">Module code</a> &raquo;</li> 
      </ul>
    </div>  

    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body" role="main">
            
<div class="deck">

    
        <p>
        This document describes the current stable version of Celery (3.1). For development docs,
        <a href="http://docs.celeryproject.org/en/master/_modules/celery/exceptions.html">go here</a>.
        </p>
    

</div>
    <h1>Source code for celery.exceptions</h1><div class="highlight"><pre>
<span></span><span class="c1"># -*- coding: utf-8 -*-</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="sd">    celery.exceptions</span>
<span class="sd">    ~~~~~~~~~~~~~~~~~</span>

<span class="sd">    This module contains all exceptions used by the Celery API.</span>

<span class="sd">&quot;&quot;&quot;</span>
<span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">absolute_import</span>

<span class="kn">import</span> <span class="nn">numbers</span>

<span class="kn">from</span> <span class="nn">.five</span> <span class="kn">import</span> <span class="n">string_t</span>

<span class="kn">from</span> <span class="nn">billiard.exceptions</span> <span class="kn">import</span> <span class="p">(</span>  <span class="c1"># noqa</span>
    <span class="n">SoftTimeLimitExceeded</span><span class="p">,</span> <span class="n">TimeLimitExceeded</span><span class="p">,</span> <span class="n">WorkerLostError</span><span class="p">,</span> <span class="n">Terminated</span><span class="p">,</span>
<span class="p">)</span>

<span class="n">__all__</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;SecurityError&#39;</span><span class="p">,</span> <span class="s1">&#39;Ignore&#39;</span><span class="p">,</span> <span class="s1">&#39;QueueNotFound&#39;</span><span class="p">,</span>
           <span class="s1">&#39;WorkerShutdown&#39;</span><span class="p">,</span> <span class="s1">&#39;WorkerTerminate&#39;</span><span class="p">,</span>
           <span class="s1">&#39;ImproperlyConfigured&#39;</span><span class="p">,</span> <span class="s1">&#39;NotRegistered&#39;</span><span class="p">,</span> <span class="s1">&#39;AlreadyRegistered&#39;</span><span class="p">,</span>
           <span class="s1">&#39;TimeoutError&#39;</span><span class="p">,</span> <span class="s1">&#39;MaxRetriesExceededError&#39;</span><span class="p">,</span> <span class="s1">&#39;Retry&#39;</span><span class="p">,</span>
           <span class="s1">&#39;TaskRevokedError&#39;</span><span class="p">,</span> <span class="s1">&#39;NotConfigured&#39;</span><span class="p">,</span> <span class="s1">&#39;AlwaysEagerIgnored&#39;</span><span class="p">,</span>
           <span class="s1">&#39;InvalidTaskError&#39;</span><span class="p">,</span> <span class="s1">&#39;ChordError&#39;</span><span class="p">,</span> <span class="s1">&#39;CPendingDeprecationWarning&#39;</span><span class="p">,</span>
           <span class="s1">&#39;CDeprecationWarning&#39;</span><span class="p">,</span> <span class="s1">&#39;FixupWarning&#39;</span><span class="p">,</span> <span class="s1">&#39;DuplicateNodenameWarning&#39;</span><span class="p">,</span>
           <span class="s1">&#39;SoftTimeLimitExceeded&#39;</span><span class="p">,</span> <span class="s1">&#39;TimeLimitExceeded&#39;</span><span class="p">,</span> <span class="s1">&#39;WorkerLostError&#39;</span><span class="p">,</span>
           <span class="s1">&#39;Terminated&#39;</span><span class="p">]</span>

<span class="n">UNREGISTERED_FMT</span> <span class="o">=</span> <span class="s2">&quot;&quot;&quot;</span><span class="se">\</span>
<span class="s2">Task of kind {0} is not registered, please make sure it&#39;s imported.</span><span class="se">\</span>
<span class="s2">&quot;&quot;&quot;</span>


<div class="viewcode-block" id="SecurityError"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.SecurityError">[docs]</a><span class="k">class</span> <span class="nc">SecurityError</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Security related exceptions.</span>

<span class="sd">    Handle with care.</span>

<span class="sd">    &quot;&quot;&quot;</span></div>


<div class="viewcode-block" id="Ignore"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.Ignore">[docs]</a><span class="k">class</span> <span class="nc">Ignore</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;A task can raise this to ignore doing state updates.&quot;&quot;&quot;</span></div>


<span class="k">class</span> <span class="nc">Reject</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;A task can raise this if it wants to reject/requeue the message.&quot;&quot;&quot;</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">reason</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">requeue</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">reason</span> <span class="o">=</span> <span class="n">reason</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">requeue</span> <span class="o">=</span> <span class="n">requeue</span>
        <span class="nb">super</span><span class="p">(</span><span class="n">Reject</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="n">reason</span><span class="p">,</span> <span class="n">requeue</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s1">&#39;reject requeue=</span><span class="si">%s</span><span class="s1">: </span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">requeue</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">reason</span><span class="p">)</span>


<div class="viewcode-block" id="WorkerTerminate"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.WorkerTerminate">[docs]</a><span class="k">class</span> <span class="nc">WorkerTerminate</span><span class="p">(</span><span class="ne">SystemExit</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Signals that the worker should terminate immediately.&quot;&quot;&quot;</span></div>
<span class="n">SystemTerminate</span> <span class="o">=</span> <span class="n">WorkerTerminate</span>  <span class="c1"># XXX compat</span>


<div class="viewcode-block" id="WorkerShutdown"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.WorkerShutdown">[docs]</a><span class="k">class</span> <span class="nc">WorkerShutdown</span><span class="p">(</span><span class="ne">SystemExit</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Signals that the worker should perform a warm shutdown.&quot;&quot;&quot;</span></div>


<div class="viewcode-block" id="QueueNotFound"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.QueueNotFound">[docs]</a><span class="k">class</span> <span class="nc">QueueNotFound</span><span class="p">(</span><span class="ne">KeyError</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Task routed to a queue not in CELERY_QUEUES.&quot;&quot;&quot;</span></div>


<div class="viewcode-block" id="ImproperlyConfigured"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.ImproperlyConfigured">[docs]</a><span class="k">class</span> <span class="nc">ImproperlyConfigured</span><span class="p">(</span><span class="ne">ImportError</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Celery is somehow improperly configured.&quot;&quot;&quot;</span></div>


<div class="viewcode-block" id="NotRegistered"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.NotRegistered">[docs]</a><span class="k">class</span> <span class="nc">NotRegistered</span><span class="p">(</span><span class="ne">KeyError</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;The task is not registered.&quot;&quot;&quot;</span>

    <span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">UNREGISTERED_FMT</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span></div>


<div class="viewcode-block" id="AlreadyRegistered"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.AlreadyRegistered">[docs]</a><span class="k">class</span> <span class="nc">AlreadyRegistered</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;The task is already registered.&quot;&quot;&quot;</span></div>


<div class="viewcode-block" id="TimeoutError"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.TimeoutError">[docs]</a><span class="k">class</span> <span class="nc">TimeoutError</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;The operation timed out.&quot;&quot;&quot;</span></div>


<div class="viewcode-block" id="MaxRetriesExceededError"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.MaxRetriesExceededError">[docs]</a><span class="k">class</span> <span class="nc">MaxRetriesExceededError</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;The tasks max restart limit has been exceeded.&quot;&quot;&quot;</span></div>


<div class="viewcode-block" id="Retry"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.Retry">[docs]</a><span class="k">class</span> <span class="nc">Retry</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;The task is to be retried later.&quot;&quot;&quot;</span>

    <span class="c1">#: Optional message describing context of retry.</span>
    <span class="n">message</span> <span class="o">=</span> <span class="bp">None</span>

    <span class="c1">#: Exception (if any) that caused the retry to happen.</span>
    <span class="n">exc</span> <span class="o">=</span> <span class="bp">None</span>

    <span class="c1">#: Time of retry (ETA), either :class:`numbers.Real` or</span>
    <span class="c1">#: :class:`~datetime.datetime`.</span>
    <span class="n">when</span> <span class="o">=</span> <span class="bp">None</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">message</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">exc</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">when</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
        <span class="kn">from</span> <span class="nn">kombu.utils.encoding</span> <span class="kn">import</span> <span class="n">safe_repr</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">message</span> <span class="o">=</span> <span class="n">message</span>
        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">exc</span><span class="p">,</span> <span class="n">string_t</span><span class="p">):</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">exc</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">excs</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">exc</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">exc</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">excs</span> <span class="o">=</span> <span class="n">exc</span><span class="p">,</span> <span class="n">safe_repr</span><span class="p">(</span><span class="n">exc</span><span class="p">)</span> <span class="k">if</span> <span class="n">exc</span> <span class="k">else</span> <span class="bp">None</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">when</span> <span class="o">=</span> <span class="n">when</span>
        <span class="ne">Exception</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">exc</span><span class="p">,</span> <span class="n">when</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>

<div class="viewcode-block" id="Retry.humanize"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.Retry.humanize">[docs]</a>    <span class="k">def</span> <span class="nf">humanize</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">when</span><span class="p">,</span> <span class="n">numbers</span><span class="o">.</span><span class="n">Real</span><span class="p">):</span>
            <span class="k">return</span> <span class="s1">&#39;in {0.when}s&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
        <span class="k">return</span> <span class="s1">&#39;at {0.when}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span></div>

    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">message</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">message</span>
        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">excs</span><span class="p">:</span>
            <span class="k">return</span> <span class="s1">&#39;Retry {0}: {1}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">humanize</span><span class="p">(),</span> <span class="bp">self</span><span class="o">.</span><span class="n">excs</span><span class="p">)</span>
        <span class="k">return</span> <span class="s1">&#39;Retry {0}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">humanize</span><span class="p">())</span>

    <span class="k">def</span> <span class="nf">__reduce__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">__class__</span><span class="p">,</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">message</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">excs</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">when</span><span class="p">)</span></div>
<span class="n">RetryTaskError</span> <span class="o">=</span> <span class="n">Retry</span>   <span class="c1"># XXX compat</span>


<div class="viewcode-block" id="TaskRevokedError"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.TaskRevokedError">[docs]</a><span class="k">class</span> <span class="nc">TaskRevokedError</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;The task has been revoked, so no result available.&quot;&quot;&quot;</span></div>


<div class="viewcode-block" id="NotConfigured"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.NotConfigured">[docs]</a><span class="k">class</span> <span class="nc">NotConfigured</span><span class="p">(</span><span class="ne">UserWarning</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Celery has not been configured, as no config module has been found.&quot;&quot;&quot;</span></div>


<div class="viewcode-block" id="AlwaysEagerIgnored"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.AlwaysEagerIgnored">[docs]</a><span class="k">class</span> <span class="nc">AlwaysEagerIgnored</span><span class="p">(</span><span class="ne">UserWarning</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;send_task ignores CELERY_ALWAYS_EAGER option&quot;&quot;&quot;</span></div>


<div class="viewcode-block" id="InvalidTaskError"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.InvalidTaskError">[docs]</a><span class="k">class</span> <span class="nc">InvalidTaskError</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;The task has invalid data or is not properly constructed.&quot;&quot;&quot;</span></div>


<span class="k">class</span> <span class="nc">IncompleteStream</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Found the end of a stream of data, but the data is not yet complete.&quot;&quot;&quot;</span>


<div class="viewcode-block" id="ChordError"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.ChordError">[docs]</a><span class="k">class</span> <span class="nc">ChordError</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;A task part of the chord raised an exception.&quot;&quot;&quot;</span></div>


<div class="viewcode-block" id="CPendingDeprecationWarning"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.CPendingDeprecationWarning">[docs]</a><span class="k">class</span> <span class="nc">CPendingDeprecationWarning</span><span class="p">(</span><span class="ne">PendingDeprecationWarning</span><span class="p">):</span>
    <span class="k">pass</span></div>


<div class="viewcode-block" id="CDeprecationWarning"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.CDeprecationWarning">[docs]</a><span class="k">class</span> <span class="nc">CDeprecationWarning</span><span class="p">(</span><span class="ne">DeprecationWarning</span><span class="p">):</span>
    <span class="k">pass</span></div>


<div class="viewcode-block" id="FixupWarning"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.FixupWarning">[docs]</a><span class="k">class</span> <span class="nc">FixupWarning</span><span class="p">(</span><span class="ne">UserWarning</span><span class="p">):</span>
    <span class="k">pass</span></div>


<div class="viewcode-block" id="DuplicateNodenameWarning"><a class="viewcode-back" href="../../reference/celery.exceptions.html#celery.backends.base.DuplicateNodenameWarning">[docs]</a><span class="k">class</span> <span class="nc">DuplicateNodenameWarning</span><span class="p">(</span><span class="ne">UserWarning</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Multiple workers are using the same nodename.&quot;&quot;&quot;</span></div>
</pre></div>

          </div>
        </div>
      </div>
    </div>
    <div class="related" role="navigation" aria-label="related navigation">
      <h3>Navigation</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="../../genindex.html" title="General Index"
             >index</a></li>
        <li class="right" >
          <a href="../../py-modindex.html" title="Python Module Index"
             >modules</a> |</li>
        <li class="nav-item nav-item-0"><a href="../../index.html">Celery 3.1.23 documentation</a> &raquo;</li>
          <li class="nav-item nav-item-1"><a href="../index.html" >Module code</a> &raquo;</li> 
      </ul>
    </div>
    <div class="footer" role="contentinfo">
        &copy; <a href="../../copyright.html">Copyright</a> 2009-2015, Ask Solem &amp; Contributors.
    </div>
  </body>
</html>
